/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.primus.lms;

import Data.CourseData;
import javax.swing.JOptionPane;

import DatabaseConnection.DBconnection;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author smsak
 */
public class SignUp extends javax.swing.JFrame {

    /**
     * Creates new form SignUp
     */
    public SignUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userBtnGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rbTeacher = new javax.swing.JRadioButton();
        rbStudent = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        tfFullName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfDepartment = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfPhoneN = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfUserName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        pfRePassword = new javax.swing.JPasswordField();
        btnSignUpSubmit = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        tfBatch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Eduverse - SignUp Page");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("SignUp Here");

        jLabel13.setFont(new java.awt.Font("Ebrima", 3, 36)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Users\\smsak\\OneDrive\\Documents\\NetBeansProjects\\LMS\\src\\main\\java\\rsz_logoeduverse.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel2)
                .addContainerGap(85, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(268, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("User Information");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("SignUp as:");

        userBtnGroup.add(rbTeacher);
        rbTeacher.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rbTeacher.setForeground(new java.awt.Color(255, 255, 255));
        rbTeacher.setText("Teacher");
        rbTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTeacherActionPerformed(evt);
            }
        });

        userBtnGroup.add(rbStudent);
        rbStudent.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rbStudent.setForeground(new java.awt.Color(255, 255, 255));
        rbStudent.setText("Student");
        rbStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbStudentActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Full Name:");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID:");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Department:");

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Phone Number:");

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Email:");

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Username:");

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Password:");

        pfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfPasswordActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Re-enter password:");

        btnSignUpSubmit.setText("Submit");
        btnSignUpSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpSubmitActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Batch");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel4)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rbTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rbStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfFullName)
                                .addComponent(tfID)
                                .addComponent(tfDepartment, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                .addComponent(tfPhoneN, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                .addComponent(tfEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                .addComponent(tfUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                .addComponent(pfPassword)
                                .addComponent(pfRePassword)
                                .addComponent(tfBatch, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)))))
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSignUpSubmit)
                .addGap(197, 197, 197))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel3)
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbTeacher)
                    .addComponent(rbStudent))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPhoneN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pfRePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(btnSignUpSubmit)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTeacherActionPerformed
        // If teacher is selected disable the batch input field
        tfBatch.setEditable(false);
    }//GEN-LAST:event_rbTeacherActionPerformed

    private void rbStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbStudentActionPerformed
        // TODO add your handling code here:
        tfBatch.setEditable(true);
    }//GEN-LAST:event_rbStudentActionPerformed

    
    // SignUp button ONCLICK
    private void btnSignUpSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpSubmitActionPerformed
        
        
        String fullName = tfFullName.getText();
        int id = Integer.parseInt(tfID.getText());
        String department = tfDepartment.getText();
        
        int phoneNumber = Integer.parseInt(tfPhoneN.getText());
        String email = tfEmail.getText();
        String username = tfUserName.getText();
        String password = pfPassword.getText();
        String rePassword = pfRePassword.getText();
        
        // Checking input fields (if they are non empty or not).
        if(fullName.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter your full name");
            tfFullName.grabFocus();
            return;
        }
        if(id == 0){
            JOptionPane.showMessageDialog(this, "Please enter your correct ID");
            tfID.grabFocus();
            return;
        }
        if(department.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter your Department name");
            tfDepartment.grabFocus();
            return;
        }
        
        if(String.valueOf(phoneNumber).length() < 10){
            JOptionPane.showMessageDialog(this, "Please enter your valid phone number.");
            tfPhoneN.grabFocus();
            return;
        }
        if(email.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter your email.");
            tfEmail.grabFocus();
            return;
        }
        if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter your username.");
            tfUserName.grabFocus();
            return;
        }
        if(password.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter a password");
            pfPassword.grabFocus();
            return;
        }
        if(password.length() < 8){
            JOptionPane.showMessageDialog(this, "Please enter a password with more than 8 characters.");
            pfPassword.grabFocus();
            return;
        }
        if(rePassword.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter your password again.");
            pfRePassword.grabFocus();
            return;
        }
        
        if(!rePassword.equals(password)){
            JOptionPane.showMessageDialog(this, "Password doesn't match");
            pfRePassword.grabFocus();
            return;
        }
        
        if(rbTeacher.isSelected()){
            DBconnection dbc = new DBconnection();
            Connection con = null;
            
            String signUpQueryForInfo = "INSERT INTO teacher_info (user_name, full_name, id, department, phone_number, email) VALUES ('" 
                    + username + "', '" + fullName + "', '" + id + "', '" + department + "', '" + phoneNumber +
                    "', '" + email + "');";
            
            String signUpQueryForLoginTable = "INSERT INTO teacher_login (user_name, user_password) VALUES ('" + username + "', '" + password + "');";
            try{
                con = dbc.getConnect();
                Statement stm = con.createStatement();
                
                stm.executeUpdate(signUpQueryForInfo);
                stm.executeUpdate(signUpQueryForLoginTable);
                
            } catch (SQLException ex) {
                Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            dispose();
            TeacherHomePage homepage = new TeacherHomePage();

            String queryForgettingCourses = "SELECT * FROM courses WHERE user_name = '" + username + "';";
                    
            ArrayList<CourseData> courseData = new ArrayList<CourseData>();
            
            try{
                Statement stm2 = con.createStatement();

                ResultSet rst = stm2.executeQuery(queryForgettingCourses);

                while(rst.next()){
                    CourseData coursedata = new CourseData(rst.getString("course_name"), rst.getString("course_id"),
                            rst.getString("course_teacher"), rst.getInt("batch"), rst.getString("user_name"), rst.getString("class_time"));

                    courseData.add(coursedata);
                }
            }
            catch(Exception e){
                System.out.println(e);
            }

            
            // Showing course information based on number of courses.
            switch (courseData.size()) {
                case 1:
                    homepage.setCourse1Data(courseData.get(0).getCourseName(), courseData.get(0).getBatch(), courseData.get(0).getClassSchedule());
                    homepage.setVisibilityCourse1();
                    break;
                case 2:
                    homepage.setCourse1Data(courseData.get(0).getCourseName(), courseData.get(0).getBatch(), courseData.get(0).getClassSchedule());
                    homepage.setCourse2Data(courseData.get(1).getCourseName(), courseData.get(1).getBatch(), courseData.get(1).getClassSchedule());
                    homepage.setVisibilityCourse2();
                    break;
                case 3:
                    homepage.setCourse1Data(courseData.get(0).getCourseName(), courseData.get(0).getBatch(), courseData.get(0).getClassSchedule());
                    homepage.setCourse2Data(courseData.get(1).getCourseName(), courseData.get(1).getBatch(), courseData.get(1).getClassSchedule());
                    homepage.setCourse3Data(courseData.get(2).getCourseName(), courseData.get(2).getBatch(), courseData.get(2).getClassSchedule());
                    homepage.setVisibilityCourse3();
                    break;
                case 4:
                    homepage.setCourse1Data(courseData.get(0).getCourseName(), courseData.get(0).getBatch(), courseData.get(0).getClassSchedule());
                    homepage.setCourse2Data(courseData.get(1).getCourseName(), courseData.get(1).getBatch(), courseData.get(1).getClassSchedule());
                    homepage.setCourse3Data(courseData.get(2).getCourseName(), courseData.get(2).getBatch(), courseData.get(2).getClassSchedule());
                    homepage.setCourse4Data(courseData.get(3).getCourseName(), courseData.get(3).getBatch(), courseData.get(3).getClassSchedule());
                    homepage.setVisibilityCourse4();
                    break;
                case 5:
                    homepage.setCourse1Data(courseData.get(0).getCourseName(), courseData.get(0).getBatch(), courseData.get(0).getClassSchedule());
                    homepage.setCourse2Data(courseData.get(1).getCourseName(), courseData.get(1).getBatch(), courseData.get(1).getClassSchedule());
                    homepage.setCourse3Data(courseData.get(2).getCourseName(), courseData.get(2).getBatch(), courseData.get(2).getClassSchedule());
                    homepage.setCourse4Data(courseData.get(3).getCourseName(), courseData.get(3).getBatch(), courseData.get(3).getClassSchedule());
                    homepage.setCourse5Data(courseData.get(4).getCourseName(), courseData.get(4).getBatch(), courseData.get(4).getClassSchedule());
                    homepage.setVisibilityCourse5();
                    break;
                case 6:
                    homepage.setCourse1Data(courseData.get(0).getCourseName(), courseData.get(0).getBatch(), courseData.get(0).getClassSchedule());
                    homepage.setCourse2Data(courseData.get(1).getCourseName(), courseData.get(1).getBatch(), courseData.get(1).getClassSchedule());
                    homepage.setCourse3Data(courseData.get(2).getCourseName(), courseData.get(2).getBatch(), courseData.get(2).getClassSchedule());
                    homepage.setCourse4Data(courseData.get(3).getCourseName(), courseData.get(3).getBatch(), courseData.get(3).getClassSchedule());
                    homepage.setCourse5Data(courseData.get(4).getCourseName(), courseData.get(4).getBatch(), courseData.get(4).getClassSchedule());
                    homepage.setCourse6Data(courseData.get(5).getCourseName(), courseData.get(5).getBatch(), courseData.get(5).getClassSchedule());
                    break;
                default:
                    break;
            }
            homepage.setVisible(true);
        }
        
        
        // If signed up user is a student then do the following task.
        if(rbStudent.isSelected()){
            int batch = Integer.parseInt(tfBatch.getText());
            if(batch <= 0){
            JOptionPane.showMessageDialog(this, "Please enter correct batch");
            tfBatch.grabFocus();
            return;
            }
            
            DBconnection dbc = new DBconnection();
            Connection con = null;
            
            String signUpQueryForInfo = "INSERT INTO student_info (user_name, full_name, id, department, batch, phone_number, email) VALUES ('" 
                    + username + "', '" + fullName + "', '" + id + "', '" + department + "', '" + batch + "', '" + phoneNumber +
                    "', '" + email + "');";
            
            String signUpQueryForLoginTable = "INSERT INTO student_login (user_name, user_password) VALUES ('" + username + "', '" + password + "');";
            try{
                con = dbc.getConnect();
                Statement stm = con.createStatement();
                
                stm.executeUpdate(signUpQueryForInfo);
                stm.executeUpdate(signUpQueryForLoginTable);
                
                
                dispose();
                
                //ResultSetMetaData resultSetMetaData = rs.getMetaData();
                //String tableName = resultSetMetaData.getTableName(1);
                //System.out.println(tableName);
                
                String courseName;
                String courseId;
                String courseTeacher;
                String schedule;
                
                // Getting batch information from student_info table by using the entered username:
                String queryForGettingBatch = "SELECT * FROM student_info WHERE user_name = '" + username + "';";
                Statement statement = con.createStatement();
                ResultSet resultBatch = statement.executeQuery(queryForGettingBatch);
                resultBatch.next();
                int batch2 = resultBatch.getInt("batch");
                
                //System.out.println(batch);
                
                // Getting all data from courses table matching the batch data of the student user.
                String queryForGettingCourseInfo = "SELECT * FROM courses WHERE batch = '" + batch2 + "';";
                Statement statement2 = con.createStatement();
                ResultSet resultCourseInfo = statement2.executeQuery(queryForGettingCourseInfo);
                
                ArrayList<CourseData> coursedata = new ArrayList<>();
                
                
                StudentHomePage homepage = new StudentHomePage();
                
                
                // Adding data into the Arraylist.
                while(resultCourseInfo.next()){
                    CourseData course = new CourseData(resultCourseInfo.getString("course_name"), resultCourseInfo.getString("course_id"),
                            resultCourseInfo.getString("course_teacher"), resultCourseInfo.getInt("batch"), resultCourseInfo.getString("user_name"),
                            resultCourseInfo.getString("class_time"));
                    
                    coursedata.add(course);
                }
                homepage.setTableData(coursedata);
                homepage.setVisible(true);
                
            } catch (SQLException ex) {
                Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
            }
            
       
        }
        
        
        
        
    }//GEN-LAST:event_btnSignUpSubmitActionPerformed

    private void pfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pfPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSignUpSubmit;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JPasswordField pfRePassword;
    private javax.swing.JRadioButton rbStudent;
    private javax.swing.JRadioButton rbTeacher;
    private javax.swing.JTextField tfBatch;
    private javax.swing.JTextField tfDepartment;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFullName;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfPhoneN;
    private javax.swing.JTextField tfUserName;
    private javax.swing.ButtonGroup userBtnGroup;
    // End of variables declaration//GEN-END:variables
}
